##
##  ISDN master configuration file for Linux.
##  Note that if you leave a field blank, you must have the trailing tab!
##
##  Set the STR_IN parameter to "in" if you're using BSD networking code.
##     If not, use "none" and forget about TCP/IP.


##
## System type. Selects which Makefiles to use for installation.
#### =()<SYS	@<SYS>@>()=
SYS	linux
##
##
## Where to install everything.
#### =()<DESTDIR	@<DESTDIR>@>()=
DESTDIR	/usr/local/isdn
##
## What to name the lockfiles.
#### =()<LOCKNAME	@<LOCKNAME>@>()=
LOCKNAME	/var/lock/LCK..%s
##

## Name of the "KERNEL" flag in system include files (KERNEL, _KERNEL, INKERNEL)
## Be aware that -DKERNEL is used by the ISDN libraries -- don't turn it off.
#### =()<KERNEL		@<KERNEL>@>()=
KERNEL		-DKERNEL -D__KERNEL__ -DMODULE -DCONFIG_MODVERSIONS
## Byte order. Motorola 4321, Intel 1234.
#### =()<BYTEORDER	@<BYTEORDER>@>()=
BYTEORDER	1234
##
## Card drivers to install. Subdirectories of SRC/cards.
#### =()<CARDS	@<CARDS>@>()=
CARDS		dumb
#### =()<DUMBCARDS	@<DUMBCARDS>@>()=
DUMBCARDS		teles
### teles avm bsc ncp ncp16
##  Teles is good for Creatix cards, too.
## Also edit cards/dumb/Config.c.
## All drivers other than Teles don't work yet.
##
## Defines for master program (L2 test version)
#### =()<CARDDEFS	@<CARDDEFS>@>()=
CARDDEFS	-DDUMB
##
## Level to include in master program.
## Set to 3.(2 for semi-testing L2 in user mode. 4 is untested.)
#### =()<MLEVEL		@<MLEVEL>@>()=
MLEVEL		3

##  If you have a parallel make, set this to "&"
#### =()<P			@<P>@>()=
P			
##  C pre-processor flags for normal programs.
#### =()<DEFS			@<DEFS>@>()=
DEFS		-I../streams -I../compat -I/usr/src/linux/include -I/usr/include/bsd
##  C pre-processor flags for kernel code.
##    Don't include any KERNEL flags.
#### =()<DEFKERNEL			@<DEFKERNEL>@>()=
DEFKERNEL	-I../streams -I../compat -I/usr/src/linux/include -fomit-frame-pointer
##  C pre-processor flags for ISDN card support
#### =()<DEFCARDS			@<DEFCARDS>@>()=
DEFCARDS			-I../../streams -I../../compat -fomit-frame-pointer -funroll-loops
###
##  C compiler for the kernel
#### =()<CC			@<CC>@>()=
CC		gcc
###
##  C compiler for the utilities
#### =()<CCU			@<CCU>@>()=
CCU		gcc 
##
##  common C compiler flags
#### =()<CFLAGS			@<CFLAGS>@>()=
CFLAGS			-O2 -Wall 
#CFLAGS			-x c++ -g -O2 -W -Wreturn-type -Wshadow -Wcomment 
#CFLAGS			-g -W -Wreturn-type -Wshadow -Wcomment -D_BSD_SOURCE -D_SYSV_SOURCE 
##  Flags for the "cc -o" line
#### =()<LDFLAGS			@<LDFLAGS>@>()=
LDFLAGS		-v
##
##  Calling ld directly?
#### =()<LD			@<LD>@>()=
LD		ld
##
##  If you need to link in other libraries, add them here
#### =()<LIBS		@<LIBS>@>()=
LIBS		-lbsd
##
## Ranlib needed ?
#### =()<RANLIB		@<RANLIB>@>()=
RANLIB		ranlib
##
## Need strsave(3)?  DO or DONT.
#### =()<NEED_STRDUP	@<NEED_STRDUP>@>()=
NEED_STRDUP	DONT
##
## Do you have setsid()?
#### =()<HAVE_SETSID	@<HAVE_SETSID>@>()=
HAVE_SETSID	DO
##
## How many arguments does your setpgrp() take? 0 or 2.
#### =()<HAVE_SETPGRP	@<HAVE_SETPGRP>@>()=
HAVE_SETPGRP	0

## Does Streeams use signed or unsigned characters in its buffer?
#### =()<STREAMCHAR	@<STREAMCHAR>@>()=
STREAMCHAR	unsigned char
##
## Define only if building a kernel complains that there's no spl().
#### =()<NEED_SPL	@<NEED_SPL>@>()=
NEED_SPL	DONT
##
## signal functions' return type? Usually void or int.
#### =()<SIGRET	@<SIGRET>@>()=
SIGRET		void
##
## Need writev(3)?  DO or DONT.
#### =()<NEED_WRITEV	@<NEED_WRITEV>@>()=
NEED_WRITEV	DONT
##
## Signal blocking? SYSV or BSD or NONE.
#### =()<SIGTYPE	@<SIGTYPE>@>()=
SIGTYPE		SYSV
##
## Define only if building a kernel complains that there's no memcpy.
#### =()<NEED_MEMCPY	@<NEED_MEMCPY>@>()=
NEED_MEMCPY	DONT
##
## Name of sys/termio.h (or sys/termios.h)
#### =()<TERMIO	@<TERMIO>@>()=
TERMIO		termios
##
## Name of /usr/include/strings.h
#### =()<STRINGS	@<STRINGS>@>()=
STRINGS		string
##
## What a minor number is called.
#### =()<SUBDEV	@<SUBDEV>@>()=
SUBDEV		uchar_t
##
## Streams <-> INet interface? "in" or "in2" or "str" or "linux" or "none"
## "in" is old BSD, "in2" is BSD 4.4, "str" is Streams-based
#### =()<STR_IN		@<STR_IN>@>()=
STR_IN		linux
##
## kernel timeout() funtion. OLD: untimeout takes first two args of timeout().
##  NEW: untimeout takes return value of timeout().
#### =()<TIMEOUT	@<TIMEOUT>@>()=
TIMEOUT		NEW
##
## Streams XXXopen() -- does it get an additional "pointer to int" argument
## which points to the appropriate errno value?
#### =()<ADDERROR	@<ADDERROR>@>()=
ADDERROR	DONT
##
## Debugging? DO or DONT
#### =()<DEBUGGING	@<DEBUGGING>@>()=
DEBUGGING	DO
#### =()<CONF_DEBUG	@<CONF_DEBUG>@>()=
CONF_MOD2	0x00
## 0x00, 0x33
#### =()<CONF_DEBUG	@<CONF_DEBUG>@>()=
CONF_DEBUG	0x0000
## 0x5006, 0xf3df


### ISDN configuration options

## One TEI per B channel? Seems to be required for US National-1.
## DO or DONT. DO is currently not supported by the L3 driver.
#### =()<MULTI_TEI	@<MULTI_TEI>@>()=
MULTI_TEI	DONT
##
### the other configuration stuff is now per-card, see DOKU.

##
## What to call protocol stuff. M_EXPROTO or (M_PROTO+0x40)
#### =()<MSG_PROTO	@<MSG_PROTO>@>()=
MSG_PROTO	M_EXPROTO
##
## What to call hopefully-expedited data stuff. M_EXDATA or (M_DATA+0x40).
#### =()<MSG_EXDATA	@<MSG_EXDATA>@>()=
MSG_EXDATA	M_EXDATA
##
## What to call normal data stuff. M_DATA
#### =()<MSG_DATA	@<MSG_DATA>@>()=
MSG_DATA	M_DATA

##
#### Path names
ROUTE_PATH	/sbin/route

